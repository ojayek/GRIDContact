[{"D:\\new send mail react js\\sendmail\\src\\Component\\DataEntry.js":"1","D:\\new send mail react js\\sendmail\\src\\App.js":"2","D:\\new send mail react js\\sendmail\\src\\Context\\mailReducer.js":"3","D:\\new send mail react js\\sendmail\\src\\Component\\NotFound.js":"4","D:\\new send mail react js\\sendmail\\src\\Context\\mailState.js":"5","D:\\new send mail react js\\sendmail\\src\\Constant\\constant.js":"6","D:\\new send mail react js\\sendmail\\src\\Component\\Header.js":"7","D:\\new send mail react js\\sendmail\\src\\Context\\mailContext.js":"8","D:\\new send mail react js\\sendmail\\src\\Component\\Grid.js":"9","D:\\New folder\\sendmail\\src\\Component\\DataEntry2.js":"10","D:\\New folder\\sendmail\\src\\Component\\DataEntry.js":"11","D:\\New folder\\sendmail\\src\\Component\\NotFound.js":"12","D:\\New folder\\sendmail\\src\\Component\\Grid.js":"13","E:\\Moshanir\\sendmail\\src\\Component\\NotFound.js":"14","E:\\Moshanir\\sendmail\\src\\Component\\Grid.js":"15","E:\\Moshanir\\sendmail\\src\\Component\\DataEntry.js":"16","E:\\Moshanir\\sendmail\\src\\App.js":"17","E:\\Moshanir\\sendmail\\src\\Component\\DataEntry2.js":"18","E:\\Moshanir\\sendmail\\src\\Constant\\constant.js":"19","E:\\Moshanir\\sendmail\\src\\Component\\Common\\CustomTable.js":"20","E:\\Moshanir\\sendmail\\src\\Component\\Common\\Columns.js":"21","E:\\Moshanir\\sendmail\\src\\index.js":"22","E:\\Moshanir\\sendmail\\src\\Context\\types.js":"23","E:\\Moshanir\\sendmail\\src\\Context\\mailState.js":"24","E:\\Moshanir\\sendmail\\src\\Context\\mailReducer.js":"25","E:\\Moshanir\\sendmail\\src\\Component\\ContactList.js":"26","E:\\Moshanir\\sendmail\\src\\Component\\Header.js":"27"},{"size":13069,"mtime":1606735391352,"results":"28","hashOfConfig":"29"},{"size":844,"mtime":1606736629923,"results":"30","hashOfConfig":"29"},{"size":566,"mtime":1606563621683,"results":"31","hashOfConfig":"29"},{"size":286,"mtime":1606564027453,"results":"32","hashOfConfig":"29"},{"size":1760,"mtime":1606728266359,"results":"33","hashOfConfig":"29"},{"size":60,"mtime":1606563243675,"results":"34","hashOfConfig":"29"},{"size":266,"mtime":1606735918403,"results":"35","hashOfConfig":"29"},{"size":111,"mtime":1606561581571,"results":"36","hashOfConfig":"29"},{"size":841,"mtime":1606737810554,"results":"37","hashOfConfig":"29"},{"size":2233,"mtime":1606559067623,"results":"38","hashOfConfig":"39"},{"size":13861,"mtime":1606886952051,"results":"40","hashOfConfig":"39"},{"size":286,"mtime":1606564027453,"results":"41","hashOfConfig":"39"},{"size":841,"mtime":1606737810554,"results":"42","hashOfConfig":"39"},{"size":286,"mtime":1606564027453,"results":"43","hashOfConfig":"44"},{"size":841,"mtime":1606737810554,"results":"45","hashOfConfig":"44"},{"size":15807,"mtime":1607172007938,"results":"46","hashOfConfig":"44"},{"size":970,"mtime":1606974568171,"results":"47","hashOfConfig":"44"},{"size":2233,"mtime":1606559067623,"results":"48","hashOfConfig":"44"},{"size":122,"mtime":1606975899412,"results":"49","hashOfConfig":"44"},{"size":14501,"mtime":1606974983148,"results":"50","hashOfConfig":"44"},{"size":1122,"mtime":1607159452882,"results":"51","hashOfConfig":"44"},{"size":493,"mtime":1606980662288,"results":"52","hashOfConfig":"44"},{"size":531,"mtime":1607168568367,"results":"53","hashOfConfig":"44"},{"size":3653,"mtime":1607171582534,"results":"54","hashOfConfig":"44"},{"size":1406,"mtime":1607171726350,"results":"55","hashOfConfig":"44"},{"size":7821,"mtime":1607163189234,"results":"56","hashOfConfig":"44"},{"size":266,"mtime":1606735918403,"results":"57","hashOfConfig":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"y5mang",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3w1dp8",{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yhej52",{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\new send mail react js\\sendmail\\src\\Component\\DataEntry.js",["120","121","122","123"],"import React, { useState,useContext,useRef } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MailContext from \"../Context/mailContext\";\r\nimport  Header from './Header';\r\n\r\n\r\n\r\n\r\nconst DataEntry = () => {\r\n\r\n  \r\nconst [file, setFile] = useState(\"\");\r\n\r\n\r\nconst el1 = useRef(); // accesing input element\r\nconst handleChange = (e) => {\r\n  const file = e.target.files[0]; // accesing file\r\n  setFile(file); // storing file\r\n};\r\n\r\n  const [code, setCode] = useState(\"\");\r\n  const [organization, setOrganization] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [letterNo, setLetterNo] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [reciever, setReceiver] = useState(\"\");\r\n  const [department, setDepartment] = useState(\"\");\r\n\r\n  const[isShowOrganizationError,setisShowOrganizationError]=useState(false);\r\n  const[isShowPositionError,setisShowPositionError]=useState(false);\r\n  const[isShowCodeError,setisShowCodeError]=useState(false);\r\n  const[isShowLetterNoError,setisShowLetterNoError]=useState(false);\r\n  const[isShowSubjectError,setisShowSubjectError]=useState(false);\r\n  const[isShowRecieverError,setisShowRecieverError]=useState(false);\r\n  const[isShowDepartmentError,setisShowDepartmentError]=useState(false);\r\n  const history = useHistory();\r\n\r\n  \r\n  const mailContext = useContext(MailContext);\r\n\r\n  const {\r\n    createXmlAndSendMail,\r\n    createdXmlAndSendMail,\r\n    error\r\n  } = mailContext;\r\n\r\n\r\n  const createXmlItemAndSend = async (frmData,inputData) => {\r\n    await createXmlAndSendMail(frmData,inputData);\r\n  };\r\n  const validateAndSend = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    let inputData = {\r\n     organization,\r\n     position,\r\n     code,\r\n     letterNo,\r\n     subject,\r\n     reciever,\r\n     department,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('file',file);\r\n    // formData.append('organization',organization);\r\n    // formData.append('position',position);\r\n    // formData.append('code',code);\r\n    // formData.append('letterno',letterNo);\r\n    // formData.append('subject',subject);\r\n    // formData.append('to',reciever);\r\n    // formData.append('body',subject);\r\n    // formData.append('department',department);\r\n\r\n\r\n    if (\r\n      organization &&\r\n      position &&\r\n      code &&\r\n      letterNo &&\r\n      subject &&\r\n      reciever &&\r\n      department \r\n    ) {\r\n      if (\r\n        organization.length > 1 &&\r\n        position.length > 1 &&\r\n        code.length > 1 &&\r\n        letterNo.length > 1 &&\r\n        subject.length > 1 &&\r\n        reciever.length > 1 &&\r\n        department.length > 1\r\n      \r\n      ) {\r\n        createXmlItemAndSend(formData,inputData);\r\n      }\r\n    } else {\r\n      if (organization === null || organization === \"\") {\r\n        setisShowOrganizationError(true);\r\n      }\r\n      if (position === null || position === \"\") {\r\n        setisShowPositionError(true);\r\n      }\r\n      if (code === null || code === \"\") {\r\n        setisShowCodeError(true);\r\n      }\r\n      if (letterNo === null || letterNo === \"\") {\r\n        setisShowLetterNoError(true);\r\n      }\r\n      if (subject === null || subject === \"\") {\r\n        setisShowSubjectError(true);\r\n      }\r\n      if (reciever === null || reciever === \"\") {\r\n        setisShowRecieverError(true);\r\n      }\r\n      if (department === null || department === \"\") {\r\n        setisShowDepartmentError(true);\r\n      }\r\n    }\r\n  };\r\n \r\n  const onChanged = (e, Type, maxNum) => {\r\n    switch (Type) {\r\n      case 'Organization':\r\n        setisShowOrganizationError(false);\r\n        setOrganization(e.target.value);\r\n        break;\r\n\r\n      case 'Position':\r\n        setisShowPositionError(false);\r\n        setPosition(e.target.value);\r\n        break;\r\n      case 'Code':\r\n        setisShowCodeError(false);\r\n        setCode(e.target.value);\r\n        break;\r\n      case 'LetterNo':\r\n        setisShowLetterNoError(false);\r\n        setLetterNo(e.target.value);\r\n        break;\r\n      case 'Subject':\r\n        setisShowSubjectError(false);\r\n        setSubject(e.target.value);\r\n        break;\r\n      case 'Reciever':\r\n        setisShowRecieverError(false);\r\n        setReceiver(e.target.value);\r\n        break;\r\n      case 'Department':\r\n        setisShowDepartmentError(false);\r\n        setDepartment(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n    return (\r\n        <div className=\"ltr\">\r\n  <Header />\r\n      <header id=\"home-section \" className=\"mt-2 registerBack\">\r\n        <div className=\"light-overlay\">\r\n          <div className=\"home-inner\">\r\n            <div className=\"container\">\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-8\">\r\n                  <div className=\"card bg-info text-center card-form\">\r\n                    <div className=\"card-body\">                   \r\n                      <form>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center \" style={{width:'20%'}}>نام سازمان</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"سازمان\"\r\n                            value={organization}\r\n                            onChange={(e) => {\r\n                              onChanged(e, \"Organization\", 1000);\r\n                                             }}\r\n                          />\r\n                          {isShowOrganizationError && (\r\n                            <label key=\"9\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center\" style={{width:'20%'}}>پست سازمانی</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"پست سازمانی\"\r\n                           value={position}\r\n                            onChange={(e) => {\r\n                             onChanged(e, \"Position\", 2000);\r\n                            }}\r\n                          />\r\n                          {isShowPositionError && (\r\n                            <label key=\"2\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center\" style={{width:'20%'}}>کد</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"کد\"\r\n                           value={code}\r\n                            onChange={(e) => {\r\n                            onChanged(e, \"Code\", 2000);\r\n                            }}\r\n                          />\r\n                          {isShowCodeError && (\r\n                            <label key=\"3\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center\" style={{width:'20%'}}>شماره نامه</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"شماره نامه\"\r\n                           value={letterNo}\r\n                            onChange={(e) => {\r\n                            onChanged(e, \"LetterNo\", 2000);\r\n                            }}\r\n                          />\r\n                          {isShowLetterNoError && (\r\n                            <label key=\"3\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center\" style={{width:'20%'}}>موضوع </label>\r\n                          <textarea\r\n                           rows=\"1\"\r\n                            type=\"\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"موضوع\"\r\n                           value={subject}\r\n                            onChange={(e) => {\r\n                             onChanged(e, \"Subject\", 20000);\r\n                            }}\r\n                          />\r\n                          {isShowLetterNoError && (\r\n                            <label key=\"3\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center\" style={{width:'20%'}}>گیرنده </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"گیرنده\"\r\n                           value={reciever}\r\n                            onChange={(e) => {\r\n                             onChanged(e, \"Reciever\", 2000);\r\n                            }}\r\n                          />\r\n                          {isShowRecieverError && (\r\n                            <label key=\"3\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center \" style={{width:'20%'}}>دپارتمان </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control form-control-lg text-center\"\r\n                            placeholder=\"دپارتمان\"\r\n                           value={department}\r\n                            onChange={(e) => {\r\n                              onChanged(e, \"Department\", 2000);\r\n                            }}\r\n                          />\r\n                          {isShowDepartmentError && (\r\n                            <label key=\"3\">*</label>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"form-group d-flex align-items-center\" dir=\"rtl\">\r\n                        <label  className=\"d-inline text-center \" style={{width:'20%'}}>بارگزاری تصویر نامه </label>\r\n                        <input type=\"file\" ref={el1} onChange={handleChange} />{\" \"}\r\n                          {isShowDepartmentError && (\r\n                            <label key=\"3\">*</label>\r\n                          )}\r\n                        </div>\r\n                    \r\n             \r\n                        \r\n\r\n                      \r\n                        <input\r\n                          type=\"button\"\r\n                          className=\"btn btn-outline-light btn-block\"\r\n                          value=\"ارسال\"\r\n                          onClick={(e) => {\r\n                            validateAndSend(e);\r\n                          }}\r\n                        />\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-4 d-none d-lg-block registerContent\">\r\n                  <h1 className=\"display-8   text-center\">شرکت مشانیر</h1>\r\n                \r\n                  <div className=\"d-flex flex-row \">\r\n                    <div className=\"p-4  align-self-start\">\r\n                      <i className=\"fa fa-check\"></i>\r\n                    </div>\r\n                    <div className=\"p-4 text-right mx-auto \">\r\n                     برای ارتباط بین سازمانی این فرم را لطفاً پر نمایید\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-row \">\r\n                    <div className=\"p-4 white align-self-start\">\r\n                      <i className=\"fa fa-check\"></i>\r\n                    </div>\r\n                    <div className=\"p-4 white align-self-end mx-auto \">\r\n                   \r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"d-flex flex-row \">\r\n                    <div className=\"p-4 white align-self-middle\">\r\n                      <i className=\"fa fa-check\"></i>\r\n                    </div>\r\n                    <div className=\"p-4  whitetext-center mx-auto \">\r\n                    \r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DataEntry\r\n",["124","125"],"D:\\new send mail react js\\sendmail\\src\\App.js",[],"D:\\new send mail react js\\sendmail\\src\\Context\\mailReducer.js",[],"D:\\new send mail react js\\sendmail\\src\\Component\\NotFound.js",[],"D:\\new send mail react js\\sendmail\\src\\Context\\mailState.js",[],"D:\\new send mail react js\\sendmail\\src\\Constant\\constant.js",[],"D:\\new send mail react js\\sendmail\\src\\Component\\Header.js",[],"D:\\new send mail react js\\sendmail\\src\\Context\\mailContext.js",[],"D:\\new send mail react js\\sendmail\\src\\Component\\Grid.js",["126","127","128","129","130"],"import React ,{useState,useEffect}from 'react';\r\nimport DataGrid , { SelectColumn, TextEditor,Column, DataGridHandle, FillEvent, PasteEvent }  from 'react-data-grid';\r\nimport 'react-data-grid/dist/react-data-grid.css';\r\n\r\n\r\nconst Grid = () => {\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setRows([\r\n        { id: 0, title: 'Example' },\r\n        { id: 1, title: 'Demo' }\r\n      ]);\r\n  }, [])\r\n    const columns = [\r\n        { key: 'id', name: 'ID' , resizable: true,frozen: false, editor: TextEditor, editorOptions: { editOnClick: true  } },\r\n        { key: 'title', name: 'Title' , editor: TextEditor, editorOptions: { editOnClick: true  } }\r\n      ];\r\n       \r\n    \r\n  return (\r\n    <DataGrid\r\n     columns={columns}\r\n     rows={rows}\r\n     onRowsChange={setRows}\r\n   \r\n  />\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","D:\\New folder\\sendmail\\src\\Component\\DataEntry2.js",[],"D:\\New folder\\sendmail\\src\\Component\\DataEntry.js",["131","132","133","134","135","136"],"D:\\New folder\\sendmail\\src\\Component\\NotFound.js",[],["137","138"],"D:\\New folder\\sendmail\\src\\Component\\Grid.js",["139","140","141","142","143"],"E:\\Moshanir\\sendmail\\src\\Component\\NotFound.js",[],"E:\\Moshanir\\sendmail\\src\\Component\\Grid.js",["144","145","146","147","148"],["149","150"],"E:\\Moshanir\\sendmail\\src\\Component\\DataEntry.js",["151","152","153","154","155","156"],"import React, { useState, useContext, useRef } from 'react';\r\nimport JCalendar from 'reactjs-persian-calendar';\r\nimport { useHistory } from 'react-router-dom';\r\nimport MailContext from '../Context/mailContext';\r\nimport Header from './Header';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from 'mdbreact';\r\nimport swal from 'sweetalert';\r\n\r\nconst DataEntry = () => {\r\n  const [file, setFile] = useState('');\r\n\r\n  const el1 = useRef(); // accesing input element\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0]; // accesing file\r\n    setFile(file); // storing file\r\n  };\r\n\r\n  const [code, setCode] = useState('');\r\n  const [organization, setOrganization] = useState('');\r\n  const [position, setPosition] = useState('');\r\n  const [letterNo, setLetterNo] = useState('');\r\n  const [subject, setSubject] = useState('');\r\n  const [reciever, setReceiver] = useState('');\r\n  const [department, setDepartment] = useState('');\r\n\r\n  const [isShowOrganizationError, setisShowOrganizationError] = useState(false);\r\n  const [isShowPositionError, setisShowPositionError] = useState(false);\r\n  const [isShowCodeError, setisShowCodeError] = useState(false);\r\n  const [isShowLetterNoError, setisShowLetterNoError] = useState(false);\r\n  const [isShowSubjectError, setisShowSubjectError] = useState(false);\r\n  const [isShowRecieverError, setisShowRecieverError] = useState(false);\r\n  const [isShowDepartmentError, setisShowDepartmentError] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const mailContext = useContext(MailContext);\r\n\r\n  const {\r\n    createXmlAndSendMail,\r\n    createdXmlAndSendMail,\r\n    setCreateXmlToNull,\r\n    showModal,\r\n    error,\r\n  } = mailContext;\r\n  const [showSwal, setShowSwal] = useState(showModal ? true : false);\r\n  const createXmlItemAndSend = async (frmData, inputData) => {\r\n    await createXmlAndSendMail(frmData, inputData);\r\n  };\r\n  const shwoswal2 = () => {\r\n    swal({\r\n      title: 'ارسال ',\r\n      text: 'نامه شما با موفقیت ارسال گردید',\r\n      icon: 'success',\r\n    });\r\n\r\n    setCode('');\r\n    setOrganization('');\r\n    setLetterNo('');\r\n    setPosition('');\r\n    setDepartment('');\r\n    setReceiver('');\r\n    setSubject('');\r\n  };\r\n  const validateAndSend = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let inputData = {\r\n      organization,\r\n      position,\r\n      code,\r\n      letterNo,\r\n      subject,\r\n      reciever,\r\n      department,\r\n    };\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    // formData.append('organization',organization);\r\n    // formData.append('position',position);\r\n    // formData.append('code',code);\r\n    // formData.append('letterno',letterNo);\r\n    // formData.append('subject',subject);\r\n    // formData.append('to',reciever);\r\n    // formData.append('body',subject);\r\n    // formData.append('department',department);\r\n\r\n    if (\r\n      organization &&\r\n      position &&\r\n      code &&\r\n      letterNo &&\r\n      subject &&\r\n      reciever &&\r\n      department\r\n    ) {\r\n      if (\r\n        organization.length > 1 &&\r\n        position.length > 1 &&\r\n        code.length > 1 &&\r\n        letterNo.length > 1 &&\r\n        subject.length > 1 &&\r\n        reciever.length > 1 &&\r\n        department.length > 1\r\n      ) {\r\n        createXmlItemAndSend(formData, inputData);\r\n      }\r\n    } else {\r\n      if (organization === null || organization === '') {\r\n        setisShowOrganizationError(true);\r\n      }\r\n      if (position === null || position === '') {\r\n        setisShowPositionError(true);\r\n      }\r\n      if (code === null || code === '') {\r\n        setisShowCodeError(true);\r\n      }\r\n      if (letterNo === null || letterNo === '') {\r\n        setisShowLetterNoError(true);\r\n      }\r\n      if (subject === null || subject === '') {\r\n        setisShowSubjectError(true);\r\n      }\r\n      if (reciever === null || reciever === '') {\r\n        setisShowRecieverError(true);\r\n      }\r\n      if (department === null || department === '') {\r\n        setisShowDepartmentError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChanged = (e, Type, maxNum) => {\r\n    switch (Type) {\r\n      case 'Organization':\r\n        setisShowOrganizationError(false);\r\n        setOrganization(e.target.value);\r\n        break;\r\n\r\n      case 'Position':\r\n        setisShowPositionError(false);\r\n        setPosition(e.target.value);\r\n        break;\r\n      case 'Code':\r\n        setisShowCodeError(false);\r\n        setCode(e.target.value);\r\n        break;\r\n      case 'LetterNo':\r\n        setisShowLetterNoError(false);\r\n        setLetterNo(e.target.value);\r\n        break;\r\n      case 'Subject':\r\n        setisShowSubjectError(false);\r\n        setSubject(e.target.value);\r\n        break;\r\n      case 'Reciever':\r\n        setisShowRecieverError(false);\r\n        setReceiver(e.target.value);\r\n        break;\r\n      case 'Department':\r\n        setisShowDepartmentError(false);\r\n        setDepartment(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='ltr'>\r\n      <Header />\r\n      {showModal ? setShowSwal(true) : null}\r\n      {showSwal ? (shwoswal2(), setCreateXmlToNull()) : null}\r\n      <header id='home-section ' className='mt-2 registerBack'>\r\n        <div className='light-overlay'>\r\n          <div className='home-inner'>\r\n            <div className='container'>\r\n              <div className='row'>\r\n                <div className='col-lg-8'>\r\n                  <div className='card bg-info text-center card-form'>\r\n                    <div className='card-body'>\r\n                      <form>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center '\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            نام سازمان\r\n                          </label>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='سازمان'\r\n                            value={organization}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'Organization', 1000);\r\n                            }}\r\n                          />\r\n                          {isShowOrganizationError && <label key='9'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center'\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            پست سازمانی\r\n                          </label>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='پست سازمانی'\r\n                            value={position}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'Position', 2000);\r\n                            }}\r\n                          />\r\n                          {isShowPositionError && <label key='2'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center'\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            کد\r\n                          </label>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='کد'\r\n                            value={code}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'Code', 2000);\r\n                            }}\r\n                          />\r\n                          {isShowCodeError && <label key='3'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center'\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            شماره نامه\r\n                          </label>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='شماره نامه'\r\n                            value={letterNo}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'LetterNo', 2000);\r\n                            }}\r\n                          />\r\n                          {isShowLetterNoError && <label key='3'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center'\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            موضوع{' '}\r\n                          </label>\r\n                          <textarea\r\n                            rows='1'\r\n                            type=''\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='موضوع'\r\n                            value={subject}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'Subject', 20000);\r\n                            }}\r\n                          />\r\n                          {isShowLetterNoError && <label key='3'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center'\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            گیرنده{' '}\r\n                          </label>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='گیرنده'\r\n                            value={reciever}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'Reciever', 2000);\r\n                            }}\r\n                          />\r\n                          {isShowRecieverError && <label key='3'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center '\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            دپارتمان{' '}\r\n                          </label>\r\n                          <input\r\n                            type='text'\r\n                            className='form-control form-control-lg text-center'\r\n                            placeholder='دپارتمان'\r\n                            value={department}\r\n                            onChange={(e) => {\r\n                              onChanged(e, 'Department', 2000);\r\n                            }}\r\n                          />\r\n                          {isShowDepartmentError && <label key='3'>*</label>}\r\n                        </div>\r\n                        <div\r\n                          className='form-group d-flex align-items-center'\r\n                          dir='rtl'\r\n                        >\r\n                          <label\r\n                            className='d-inline text-center '\r\n                            style={{ width: '20%' }}\r\n                          >\r\n                            بارگزاری تصویر نامه{' '}\r\n                          </label>\r\n                          <input\r\n                            type='file'\r\n                            ref={el1}\r\n                            onChange={handleChange}\r\n                          />{' '}\r\n                          {isShowDepartmentError && <label key='3'>*</label>}\r\n                        </div>\r\n\r\n                        <input\r\n                          type='button'\r\n                          // className=\"btn btn-outline-light btn-block\"\r\n                          className='col-xl-4 col-lg-4 d-none d-xl-block d-lg-block justify-content-md-center bg-success'\r\n                          value='ارسال'\r\n                          onClick={(e) => {\r\n                            validateAndSend(e);\r\n                          }}\r\n                        />\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='col-lg-4 d-none d-lg-block registerContent'>\r\n                  <h1 className='display-8   text-center'>شرکت مشانیر</h1>\r\n                  <JCalendar\r\n                    locale={'fa'}\r\n                    color={'#000066'}\r\n                    size={50}\r\n                    onClick={console.log}\r\n                    itemRender={(key, item, children) => children}\r\n                  />\r\n                  <div className='d-flex flex-row '>\r\n                    <div className='p-4  align-self-start'>\r\n                      <i className='fa fa-check'></i>\r\n                    </div>\r\n                    <div className='p-6 text-right mx-auto '>\r\n                      برای ارتباط بین سازمانی این فرم را لطفاً پر نمایید\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className='d-flex flex-row '>\r\n                    <div className='p-4 white align-self-start'>\r\n                      <i className='fa fa-check'></i>\r\n                    </div>\r\n                    <div className='p-4 white align-self-end mx-auto '></div>\r\n                  </div>\r\n\r\n                  <div className='d-flex flex-row '>\r\n                    <div className='p-4 white align-self-middle'>\r\n                      <i className='fa fa-check'></i>\r\n                    </div>\r\n                    <div className='p-4  whitetext-center mx-auto '></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <MDBFooter color='blue' className='font-small pt-4 mt-4 bg-info'>\r\n        <div className='footer-copyright text-center py-3'>\r\n          <MDBContainer fluid>\r\n            &copy; {new Date().getFullYear()} Copyright:{' '}\r\n            <a href='https://www.moshanir.co'> moshanir.com </a>\r\n          </MDBContainer>\r\n        </div>\r\n      </MDBFooter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataEntry;\r\n","E:\\Moshanir\\sendmail\\src\\App.js",[],["157","158"],"E:\\Moshanir\\sendmail\\src\\Component\\DataEntry2.js",[],"E:\\Moshanir\\sendmail\\src\\Constant\\constant.js",[],"E:\\Moshanir\\sendmail\\src\\Component\\Common\\CustomTable.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173"],"import React, { useEffect } from \"react\";\r\nimport \"../../css/CustomTable.css\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useSortBy,\r\n  useFilters,\r\n  useGroupBy,\r\n  useExpanded,\r\n  useRowSelect,\r\n} from \"react-table\";\r\nimport matchSorter from \"match-sorter\";\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  table {\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    tr {\r\n      :last-child {\r\n        td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    th,\r\n    td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n\r\n    td {\r\n      input {\r\n        font-size: 1rem;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .pagination {\r\n    padding: 0.5rem;\r\n  }\r\n`;\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n  editable,\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue);\r\n\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    //\tupdateMyData(index, id, value);\r\n  };\r\n\r\n  // If the initialValue is changed externall, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  if (!editable) {\r\n    return `${initialValue}`;\r\n  }\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} />;\r\n};\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      className=\"forSearch\"\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`جستجو`}\r\n    />\r\n  );\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set();\r\n    preFilteredRows.forEach((row) => {\r\n      options.add(row.values[id]);\r\n    });\r\n    return [...options.values()];\r\n  }, [id, preFilteredRows]);\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the min and max\r\n  // using the preFilteredRows\r\n\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    preFilteredRows.forEach((row) => {\r\n      min = Math.min(row.values[id], min);\r\n      max = Math.max(row.values[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={filterValue || min}\r\n        onChange={(e) => {\r\n          setFilter(parseInt(e.target.value, 10));\r\n        }}\r\n      />\r\n      <button onClick={() => setFilter(undefined)}>Off</button>\r\n    </>\r\n  );\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n    preFilteredRows.forEach((row) => {\r\n      min = Math.min(row.values[id], min);\r\n      max = Math.max(row.values[id], max);\r\n    });\r\n    return [min, max];\r\n  }, [id, preFilteredRows]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n      }}\r\n    >\r\n      <input\r\n        value={filterValue[0] || \"\"}\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          const val = e.target.value;\r\n          setFilter((old = []) => [\r\n            val ? parseInt(val, 10) : undefined,\r\n            old[1],\r\n          ]);\r\n        }}\r\n        placeholder={`Min (${min})`}\r\n        style={{\r\n          width: \"70px\",\r\n          marginRight: \"0.5rem\",\r\n        }}\r\n      />\r\n      to\r\n      <input\r\n        value={filterValue[1] || \"\"}\r\n        type=\"number\"\r\n        onChange={(e) => {\r\n          const val = e.target.value;\r\n          setFilter((old = []) => [\r\n            old[0],\r\n            val ? parseInt(val, 10) : undefined,\r\n          ]);\r\n        }}\r\n        placeholder={`Max (${max})`}\r\n        style={{\r\n          width: \"70px\",\r\n          marginLeft: \"0.5rem\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = (val) => !val;\r\n\r\n// Be sure to pass our updateMyData and the skipReset option\r\nfunction CustomTable ({columns, data, updateMyData, pc, skipReset }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id];\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true;\r\n        });\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    setPageSize(10);\r\n    // updateMyData({ pageIndex, pageSize });\r\n  }, []);\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n      // And also our default editable cell\r\n      //Cell: EditableCell,\r\n    }),\r\n    []\r\n  );\r\n  const setpagesize = () => {};\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: {\r\n      pageIndex,\r\n      pageSize,\r\n      sortBy,\r\n      groupBy,\r\n      expanded,\r\n      filters,\r\n      selectedRowIds,\r\n    },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      filterTypes,\r\n      pageSize: 15,\r\n      // manualPagination: true,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      //updateMyData,\r\n      // We also need to pass this so the page doesn't change\r\n      // when we edit the data.\r\n      autoResetPage: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      disableMultiSort: true,\r\n    },\r\n    useFilters,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect,\r\n    setpagesize\r\n  );\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div className=\"scroll rtlDir \" style={{ width: \"100vw\" }}>\r\n      <table {...getTableProps()} className=\"striped highlight w-100\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  <div>\r\n                    {column.canGroupBy ? (\r\n                      // If the column can be grouped, let's add a toggle\r\n                      <span {...column.getGroupByToggleProps()}>\r\n                        {/* {column.isGrouped ? \"🛑 \" : \"+\"} */}\r\n                      </span>\r\n                    ) : null}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.render(\"Header\")}\r\n                      {/* Add a sort direction indicator */}\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? \" 🔽\"\r\n                          : \" 🔼\"\r\n                        : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  {/* Render the columns filter UI */}\r\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()} className=\"trheight\">\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? \"+\" : \"-\"}\r\n                          </span>{\" \"}\r\n                          {cell.render(\"Cell\", { editable: false })} (\r\n                          {row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        // If the cell is aggregated, use the Aggregated\r\n                        // renderer for cell\r\n                        cell.render(\"Aggregated\")\r\n                      ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                        // Otherwise, just render the regular cell\r\n                        cell.render(\"Cell\", { editable: true })\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/*\r\n        Pagination can be built however you'd like.\r\n        This is just a very basic UI implementation:\r\n      */}\r\n      <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {\"<<\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {\"<\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {\">\"}\r\n        </button>{\" \"}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {\">>\"}\r\n        </button>{\" \"}\r\n        <span className=\"m-3\">\r\n          صفحه{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} از {pageOptions.length}\r\n          </strong>{\" \"}\r\n        </span>\r\n        {/* <span>\r\n          |\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={(e) => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n              gotoPage(page);\r\n            }}\r\n            style={{ width: \"20px\" }}\r\n          />\r\n          رفتن به صفحه{\" \"}\r\n        </span>{\" \"} */}\r\n        {/* <select\r\n          className=\"ml-5\"\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 15, 30, 40, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              نمایش {pageSize}\r\n            </option>\r\n          ))}\r\n        </select> */}\r\n      </div>\r\n      {/* <pre>\r\n\t\t\t\t<code>\r\n\t\t\t\t\t{JSON.stringify(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpageIndex,\r\n\t\t\t\t\t\t\tpageSize,\r\n\t\t\t\t\t\t\tpageCount,\r\n\t\t\t\t\t\t\tcanNextPage,\r\n\t\t\t\t\t\t\tcanPreviousPage,\r\n\t\t\t\t\t\t\tsortBy,\r\n\t\t\t\t\t\t\tgroupBy,\r\n\t\t\t\t\t\t\texpanded: expanded,\r\n\t\t\t\t\t\t\tfilters,\r\n\t\t\t\t\t\t\tselectedRowIds: selectedRowIds,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t2\r\n\t\t\t\t\t)}\r\n\t\t\t\t</code>\r\n\t\t\t</pre> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter((row) => {\r\n    const rowValue = row.values[id];\r\n    return rowValue >= filterValue;\r\n  });\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\r\n\r\n// This is a custom aggregator that\r\n// takes in an array of leaf values and\r\n// returns the rounded median\r\nfunction roundedMedian(leafValues) {\r\n  let min = leafValues[0] || 0;\r\n  let max = leafValues[0] || 0;\r\n\r\n  leafValues.forEach((value) => {\r\n    min = Math.min(min, value);\r\n    max = Math.max(max, value);\r\n  });\r\n\r\n  return Math.round((min + max) / 2);\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef();\r\n    const resolvedRef = ref || defaultRef;\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate;\r\n    }, [resolvedRef, indeterminate]);\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomTable;\r\n","E:\\Moshanir\\sendmail\\src\\Component\\Common\\Columns.js",[],"E:\\Moshanir\\sendmail\\src\\index.js",[],"E:\\Moshanir\\sendmail\\src\\Context\\types.js",[],"E:\\Moshanir\\sendmail\\src\\Context\\mailState.js",["174"],"E:\\Moshanir\\sendmail\\src\\Context\\mailReducer.js",[],"E:\\Moshanir\\sendmail\\src\\Component\\ContactList.js",["175","176","177","178","179","180","181","182"],"E:\\Moshanir\\sendmail\\src\\Component\\Header.js",[],{"ruleId":"183","severity":1,"message":"184","line":34,"column":9,"nodeType":"185","messageId":"186","endLine":34,"endColumn":27},{"ruleId":"183","severity":1,"message":"187","line":37,"column":9,"nodeType":"185","messageId":"186","endLine":37,"endColumn":16},{"ruleId":"183","severity":1,"message":"188","line":44,"column":5,"nodeType":"185","messageId":"186","endLine":44,"endColumn":26},{"ruleId":"183","severity":1,"message":"189","line":45,"column":5,"nodeType":"185","messageId":"186","endLine":45,"endColumn":10},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"183","severity":1,"message":"194","line":2,"column":21,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"195","line":2,"column":46,"nodeType":"185","messageId":"186","endLine":2,"endColumn":52},{"ruleId":"183","severity":1,"message":"196","line":2,"column":54,"nodeType":"185","messageId":"186","endLine":2,"endColumn":68},{"ruleId":"183","severity":1,"message":"197","line":2,"column":70,"nodeType":"185","messageId":"186","endLine":2,"endColumn":79},{"ruleId":"183","severity":1,"message":"198","line":2,"column":81,"nodeType":"185","messageId":"186","endLine":2,"endColumn":91},{"ruleId":"183","severity":1,"message":"199","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":16},{"ruleId":"183","severity":1,"message":"200","line":6,"column":32,"nodeType":"185","messageId":"186","endLine":6,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":36,"column":9,"nodeType":"185","messageId":"186","endLine":36,"endColumn":27},{"ruleId":"183","severity":1,"message":"187","line":39,"column":9,"nodeType":"185","messageId":"186","endLine":39,"endColumn":16},{"ruleId":"183","severity":1,"message":"188","line":46,"column":5,"nodeType":"185","messageId":"186","endLine":46,"endColumn":26},{"ruleId":"183","severity":1,"message":"189","line":47,"column":5,"nodeType":"185","messageId":"186","endLine":47,"endColumn":10},{"ruleId":"190","replacedBy":"201"},{"ruleId":"192","replacedBy":"202"},{"ruleId":"183","severity":1,"message":"194","line":2,"column":21,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"195","line":2,"column":46,"nodeType":"185","messageId":"186","endLine":2,"endColumn":52},{"ruleId":"183","severity":1,"message":"196","line":2,"column":54,"nodeType":"185","messageId":"186","endLine":2,"endColumn":68},{"ruleId":"183","severity":1,"message":"197","line":2,"column":70,"nodeType":"185","messageId":"186","endLine":2,"endColumn":79},{"ruleId":"183","severity":1,"message":"198","line":2,"column":81,"nodeType":"185","messageId":"186","endLine":2,"endColumn":91},{"ruleId":"183","severity":1,"message":"194","line":2,"column":21,"nodeType":"185","messageId":"186","endLine":2,"endColumn":33},{"ruleId":"183","severity":1,"message":"195","line":2,"column":46,"nodeType":"185","messageId":"186","endLine":2,"endColumn":52},{"ruleId":"183","severity":1,"message":"196","line":2,"column":54,"nodeType":"185","messageId":"186","endLine":2,"endColumn":68},{"ruleId":"183","severity":1,"message":"197","line":2,"column":70,"nodeType":"185","messageId":"186","endLine":2,"endColumn":79},{"ruleId":"183","severity":1,"message":"198","line":2,"column":81,"nodeType":"185","messageId":"186","endLine":2,"endColumn":91},{"ruleId":"190","replacedBy":"203"},{"ruleId":"192","replacedBy":"204"},{"ruleId":"183","severity":1,"message":"199","line":6,"column":10,"nodeType":"185","messageId":"186","endLine":6,"endColumn":16},{"ruleId":"183","severity":1,"message":"200","line":6,"column":32,"nodeType":"185","messageId":"186","endLine":6,"endColumn":38},{"ruleId":"183","severity":1,"message":"184","line":30,"column":10,"nodeType":"185","messageId":"186","endLine":30,"endColumn":28},{"ruleId":"183","severity":1,"message":"187","line":33,"column":9,"nodeType":"185","messageId":"186","endLine":33,"endColumn":16},{"ruleId":"183","severity":1,"message":"188","line":39,"column":5,"nodeType":"185","messageId":"186","endLine":39,"endColumn":26},{"ruleId":"183","severity":1,"message":"189","line":42,"column":5,"nodeType":"185","messageId":"186","endLine":42,"endColumn":10},{"ruleId":"190","replacedBy":"205"},{"ruleId":"192","replacedBy":"206"},{"ruleId":"183","severity":1,"message":"207","line":15,"column":7,"nodeType":"185","messageId":"186","endLine":15,"endColumn":13},{"ruleId":"183","severity":1,"message":"208","line":58,"column":7,"nodeType":"185","messageId":"186","endLine":58,"endColumn":19},{"ruleId":"183","severity":1,"message":"209","line":93,"column":9,"nodeType":"185","messageId":"186","endLine":93,"endColumn":14},{"ruleId":"183","severity":1,"message":"210","line":109,"column":10,"nodeType":"185","messageId":"186","endLine":109,"endColumn":28},{"ruleId":"183","severity":1,"message":"211","line":143,"column":10,"nodeType":"185","messageId":"186","endLine":143,"endColumn":28},{"ruleId":"183","severity":1,"message":"212","line":178,"column":10,"nodeType":"185","messageId":"186","endLine":178,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":265,"column":6,"nodeType":"215","endLine":265,"endColumn":8,"suggestions":"216"},{"ruleId":"183","severity":1,"message":"217","line":297,"column":7,"nodeType":"185","messageId":"186","endLine":297,"endColumn":15},{"ruleId":"183","severity":1,"message":"218","line":298,"column":7,"nodeType":"185","messageId":"186","endLine":298,"endColumn":13},{"ruleId":"183","severity":1,"message":"219","line":299,"column":7,"nodeType":"185","messageId":"186","endLine":299,"endColumn":14},{"ruleId":"183","severity":1,"message":"220","line":300,"column":7,"nodeType":"185","messageId":"186","endLine":300,"endColumn":15},{"ruleId":"183","severity":1,"message":"221","line":301,"column":7,"nodeType":"185","messageId":"186","endLine":301,"endColumn":14},{"ruleId":"183","severity":1,"message":"222","line":302,"column":7,"nodeType":"185","messageId":"186","endLine":302,"endColumn":21},{"ruleId":"183","severity":1,"message":"223","line":490,"column":10,"nodeType":"185","messageId":"186","endLine":490,"endColumn":23},{"ruleId":"183","severity":1,"message":"224","line":502,"column":7,"nodeType":"185","messageId":"186","endLine":502,"endColumn":28},{"ruleId":"183","severity":1,"message":"225","line":4,"column":18,"nodeType":"185","messageId":"186","endLine":4,"endColumn":24},{"ruleId":"183","severity":1,"message":"226","line":16,"column":10,"nodeType":"185","messageId":"186","endLine":16,"endColumn":17},{"ruleId":"183","severity":1,"message":"227","line":17,"column":10,"nodeType":"185","messageId":"186","endLine":17,"endColumn":21},{"ruleId":"183","severity":1,"message":"228","line":18,"column":10,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"229","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":22},{"ruleId":"183","severity":1,"message":"189","line":25,"column":5,"nodeType":"185","messageId":"186","endLine":25,"endColumn":10},{"ruleId":"213","severity":1,"message":"230","line":29,"column":6,"nodeType":"215","endLine":29,"endColumn":8,"suggestions":"231"},{"ruleId":"213","severity":1,"message":"232","line":63,"column":5,"nodeType":"215","endLine":63,"endColumn":7,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":69,"column":5,"nodeType":"236","messageId":"237","endLine":82,"endColumn":6},"no-unused-vars","'isShowSubjectError' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'createdXmlAndSendMail' is assigned a value but never used.","'error' is assigned a value but never used.","no-native-reassign",["238"],"no-negated-in-lhs",["239"],"'SelectColumn' is defined but never used.","'Column' is defined but never used.","'DataGridHandle' is defined but never used.","'FillEvent' is defined but never used.","'PasteEvent' is defined but never used.","'MDBCol' is defined but never used.","'MDBRow' is defined but never used.",["238"],["239"],["238"],["239"],["238"],["239"],"'Styles' is assigned a value but never used.","'EditableCell' is assigned a value but never used.","'count' is assigned a value but never used.","'SelectColumnFilter' is defined but never used.","'SliderColumnFilter' is defined but never used.","'NumberRangeColumnFilter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPageSize'. Either include it or remove the dependency array.","ArrayExpression",["240"],"'pageSize' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'groupBy' is assigned a value but never used.","'expanded' is assigned a value but never used.","'filters' is assigned a value but never used.","'selectedRowIds' is assigned a value but never used.","'roundedMedian' is defined but never used.","'IndeterminateCheckbox' is assigned a value but never used.","'decode' is defined but never used.","'dpError' is assigned a value but never used.","'showdpError' is assigned a value but never used.","'telError' is assigned a value but never used.","'showtelError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetContactList'. Either include it or remove the dependency array.",["241"],"React Hook useMemo has a missing dependency: 'kartableActions'. Either include it or remove the dependency array.",["242"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [setPageSize]",{"range":"249","text":"250"},"Update the dependencies array to be: [GetContactList]",{"range":"251","text":"252"},"Update the dependencies array to be: [kartableActions]",{"range":"253","text":"254"},[6682,6684],"[setPageSize]",[903,905],"[GetContactList]",[1803,1805],"[kartableActions]"]